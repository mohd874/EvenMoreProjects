/*
 * ShowItemImage.java
 *
 * Created on August 16, 2003, 4:34 AM
 */

package IsometricGame.Item;

import java.awt.*;
import java.awt.image.*;
import javax.swing.*;
import java.io.*;
import java.awt.event.*;
import java.util.*;

/**
 *
 * @author  jgauci
 */
public class ShowItemImage extends javax.swing.JDialog implements ActionListener {
    JMenu menu;
    Point pressPoint;
    Rectangle lasso;
    Vector itemsCreated;
    ObjectOutputStream dout;
    ItemType itemTypeCreated;
    JDialog chooseAttributes;
    byte weaponType;
    
    /** Creates new form ShowItemImage */
    public ShowItemImage(java.awt.Frame parent, boolean modal,Image itemImage,ObjectOutputStream dout) {
        super(parent, modal);
        initComponents();
        this.dout = dout;
        itemsCreated = new Vector();
        lasso = new Rectangle();
        menu = new JMenu("Select an Item Type");
        for(int a=0;a<ItemOperator.itemCategoryNames.length;a++) {
            JMenuItem menuItem = new JMenuItem(ItemOperator.itemCategoryNames[a]);
            menuItem.addActionListener(this);
            menu.add(menuItem);
            
        }
        menuBar.add(menu);
        BufferedImage tempImage = new BufferedImage(itemImage.getWidth(null),itemImage.getHeight(null),BufferedImage.TYPE_4BYTE_ABGR);
        tempImage.createGraphics().drawImage(itemImage,0,0,null);
        for(int a=0;a<tempImage.getHeight();a+=50)
            tempImage.createGraphics().drawLine(0, a, tempImage.getWidth(), a);
        for(int a=0;a<tempImage.getWidth();a+=50)
            tempImage.createGraphics().drawLine(a, 0, a, tempImage.getHeight());
        itemImageLabel.setIcon(new ImageIcon(tempImage));
        //setBounds(0, 0, tempImage.getWidth(null), tempImage.getHeight(null)*2);
        System.out.println(tempImage.getHeight(null));
        //getContentPane().add(preview, new org.netbeans.lib.awtextra.AbsoluteConstraints(0,0,tempImage.getWidth(null),tempImage.getHeight(null)));
        setSize(itemImage.getWidth(null),itemImage.getHeight(null)*2);
        repaint();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        itemImageLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        exitMenu = new javax.swing.JMenu();
        exit = new javax.swing.JMenuItem();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        itemImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        itemImageLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        itemImageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemImageLabelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                itemImageLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itemImageLabelMouseReleased(evt);
            }
        });

        getContentPane().add(itemImageLabel, java.awt.BorderLayout.CENTER);

        exitMenu.setText("File");
        exit.setText("exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        exitMenu.add(exit);

        menuBar.add(exitMenu);

        setJMenuBar(menuBar);

        pack();
    }//GEN-END:initComponents
    
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // Add your handling code here:
        System.out.println("Exiting");
        this.hide();
    }//GEN-LAST:event_exitActionPerformed
    
    private void itemImageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemImageLabelMouseClicked
        // Add your handling code here:
    }//GEN-LAST:event_itemImageLabelMouseClicked
    
    private void itemImageLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemImageLabelMouseReleased
        // Add your handling code here:
        lasso.setFrameFromDiagonal(pressPoint, evt.getPoint());
        lasso.x -= lasso.x%50;
        lasso.y -= lasso.y%50;
        lasso.width =  ((int)Math.ceil(((double)lasso.width)/50))*50;
        lasso.height =  ((int)Math.ceil(((double)lasso.height)/50))*50;
        Graphics2D g = (Graphics2D) this.getContentPane().getGraphics();
        g.setStroke(new BasicStroke(3.0f));
        g.setColor(Color.BLACK);
        g.drawRect(lasso.x,lasso.y,lasso.width,lasso.height);
    }//GEN-LAST:event_itemImageLabelMouseReleased
    
    private void itemImageLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemImageLabelMousePressed
        // Add your handling code here:
        this.getContentPane().getGraphics().clearRect(0, 0, this.getWidth(), this.getHeight());
        repaint();
        pressPoint = evt.getPoint();
    }//GEN-LAST:event_itemImageLabelMousePressed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    public void actionPerformed(ActionEvent e) {
        if(e.getActionCommand().equalsIgnoreCase("SAVE")) {
            try {
                dout.reset();
                dout.writeByte(weaponType);
                dout.writeObject(itemTypeCreated);
                chooseAttributes.hide();
            }
            catch(Exception ee) {
                ee.printStackTrace();
            }
            return;
        }
        
        
        System.out.println(e.getActionCommand()+" pressed");
        chooseAttributes = new JDialog(this,true);
        chooseAttributes.setSize(400,400);
        chooseAttributes.setLocationRelativeTo(this);
        chooseAttributes.getContentPane().setBackground(Color.WHITE);
        chooseAttributes.getContentPane().setLayout(new javax.swing.BoxLayout(chooseAttributes.getContentPane(), javax.swing.BoxLayout.Y_AXIS));
        chooseAttributes.repaint();
        
        try {
            itemTypeCreated = (ItemType) Class.forName("IsometricGame.Item."+e.getActionCommand()+"Type").getConstructor(new Class[] { Dimension.class, Dimension.class, Container.class } ).newInstance(new Object[] {new Dimension(lasso.x/50,lasso.y/50), new Dimension(lasso.width/50,lasso.height/50), chooseAttributes.getContentPane() });
        }
        catch(Exception e2) {
            e2.printStackTrace();
        }
        
        if(e.getActionCommand().equalsIgnoreCase("RangedWeapon")) {
            weaponType = ItemOperator.RANGEDWEAPON;
            //System.out.println("Creating Dialog");
            //itemTypeCreated = new RangedWeaponType(new Dimension(lasso.x,lasso.y),new Dimension(lasso.width,lasso.height),chooseAttributes.getContentPane());
        }
        else if(e.getActionCommand().equalsIgnoreCase("MeleeWeapon")) {
            weaponType = ItemOperator.MELEEWEAPON;
            //System.out.println("Creating Dialog");
            //itemTypeCreated = new MeleeWeaponType(new Dimension(lasso.x,lasso.y),new Dimension(lasso.width,lasso.height),chooseAttributes.getContentPane());
        }
        JButton saveButton = new JButton("SAVE");
        saveButton.addActionListener(this);
        chooseAttributes.getContentPane().add(saveButton);
        chooseAttributes.repaint();
        chooseAttributes.show();
        
    }
    
    //System.out.println("RELEASED");
    //popup.show(this,e.getX(),e.getY());
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu exitMenu;
    private javax.swing.JLabel itemImageLabel;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables
    
}
